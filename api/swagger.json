{
    "openapi": "3.0.3",
    "info": {
        "version": "1.0.0",
        "title": "Mean Stack Template - OpenAPI 3.0",
        "description": "Documentation of Mean Stack Template project developed by Lucas Rinaldi. Hope you guys enjoy and that will help you on your study journey",
        "contact": {
            "name": "Lucas Rinaldi",
            "email": "lucasreinaldi@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "externalDocs": {
        "description": "Find more projects on my Github!",
        "url": "https://github.com/rinaldilucas"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api",
            "description": "Local server"
        }
    ],
    "paths": {
        "/tasks": {
            "get": {
                "tags": ["Task"],
                "summary": "Returns all tasks",
                "description": "Returns all tasks which the user has access to",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to be fetched",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "description": "Term to be fetch withing the title of the task",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "Index of the page to be fetched",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sortFilter",
                        "in": "query",
                        "description": "Field to be sorted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortDirection",
                        "in": "query",
                        "description": "Direction of the sort (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            },
            "post": {
                "tags": ["Task"],
                "summary": "Creates a new task",
                "description": "Creates a new task for the current user. Duplicates are allowed",
                "operationId": "createTask",
                "requestBody": {
                    "description": "Task to add",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error creating task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            },
            "put": {
                "tags": ["Task"],
                "summary": "Updates a task",
                "description": "Updates a task based on the body of requisition",
                "operationId": "updateTask",
                "requestBody": {
                    "description": "Task to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error removing task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Task"],
                "summary": "Removes a task",
                "description": "Removes a single task based on the ID supplied",
                "operationId": "removeTask",
                "responses": {
                    "204": {
                        "description": "Successful response"
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error removing task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            }
        },
        "/tasks/by-interval": {
            "get": {
                "tags": ["Task"],
                "summary": "Returns all tasks by interval",
                "description": "Returns all tasks by two dates interval",
                "operationId": "getTaskByInterval",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Initial date to fetch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finalDate",
                        "in": "query",
                        "description": "Final date to fetch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tasks not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": ["Task"],
                "summary": "Returns a task",
                "description": "Returns a task based on a single ID",
                "operationId": "getTaskById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task to fetch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error removing task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": ["Category"],
                "summary": "Returns all categories",
                "description": "Returns all categories which the user has access to",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            },
            "post": {
                "tags": ["Category"],
                "summary": "Creates a new category",
                "description": "Creates a new category for the current user. Duplicates are allowed",
                "operationId": "createCategory",
                "requestBody": {
                    "description": "Category to add",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error creating category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            }
        },
        "/categories/{id}": {
            "delete": {
                "tags": ["Category"],
                "summary": "Removes a category",
                "description": "Removes a single category based on the ID supplied",
                "operationId": "removeCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful response"
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error removing category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            }
        },
        "/users/email/{email}": {
            "get": {
                "tags": ["User"],
                "summary": "Returns a user based on email",
                "description": "Returns a user based email",
                "operationId": "getUserByEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email of user to fetch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "alreadyRegistered": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "User not registered"
                    },
                    "400": {
                        "description": "User already exists with email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/authenticate": {
            "post": {
                "tags": ["Auth"],
                "summary": "Authenticate the user",
                "description": "Authenticates the user and retrieve a JWT token",
                "operationId": "authenticate",
                "requestBody": {
                    "description": "User to be authenticated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "minLength": 5,
                                        "maxLength": 150,
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 150
                                    },
                                    "keepUserLoggedIn": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AuthData"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User or password missmatchs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "Register a new user",
                "description": "Register a new user",
                "operationId": "register",
                "requestBody": {
                    "description": "User to be registered",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "minLength": 5,
                                        "maxLength": 150,
                                        "example": "user@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 150
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": ["admin", "user"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "ser already exists with email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "ErrorError creating document",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/changePassword": {
            "put": {
                "tags": ["Auth"],
                "summary": "Change the password",
                "description": "Change the password of the user generating hash",
                "operationId": "changePassword",
                "requestBody": {
                    "description": "User to have the password changed",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error updating user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": ["Auth"],
                "summary": "Generate refresh token",
                "description": "Generate a refresh token to user",
                "operationId": "refreshToken",
                "requestBody": {
                    "description": "Refresh token to be genereated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/AuthData"
                                        }
                                    },
                                    "success": {
                                        "type": "boolean"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "totalCount": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error refreshing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "Sign out user",
                "description": "Sign out user and invalidate token",
                "operationId": "logout",
                "requestBody": {
                    "description": "Sign out user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "totalCount": {
                                            "type": "integer"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "auth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Task": {
                "type": "object",
                "required": ["title", "status", "userId"],
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-05-22"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["toDo", "inProgress", "done"]
                    },
                    "category": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-05-22"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-05-22"
                    }
                }
            },
            "Category": {
                "type": "object",
                "required": ["name", "userId"],
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 2
                    },
                    "userId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-05-22"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-05-22"
                    }
                }
            },
            "User": {
                "type": "object",
                "required": ["email", "password", "role"],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 5,
                        "maxLength": 150,
                        "example": "user@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 150
                    },
                    "role": {
                        "type": "string",
                        "enum": ["admin", "user"]
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2019-05-17"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-05-22"
                    }
                }
            },
            "AuthData": {
                "type": "object",
                "required": ["access", "expiresIn", "refresh", "userId"],
                "properties": {
                    "access": {
                        "type": "string"
                    },
                    "expiresIn": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "keepUserLoggedIn": {
                        "type": "boolean"
                    }
                }
            },
            "Error": {
                "type": "object",
                "required": ["success", "expiresIn", "refresh", "userId"],
                "properties": {
                    "success": {
                        "type": "boolean",
                        "default": false
                    },
                    "status": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "validationErrors": {
                        "type": "array"
                    }
                }
            }
        },
        "securitySchemes": {
            "auth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Task",
            "description": "Operations about tasks"
        },
        {
            "name": "Category",
            "description": "Operations about categories"
        },
        {
            "name": "User",
            "description": "Operations about user"
        },
        {
            "name": "Auth",
            "description": "Operations about authentication"
        }
    ]
}
